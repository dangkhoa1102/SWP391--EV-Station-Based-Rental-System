[
  {
    "ContainingType": "EVStation_basedRentalSystem.Services.AuthAPI.Controllers.AuthController",
    "Method": "GetAllUsers",
    "RelativePath": "api/Auth",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "EVStation_basedRentalSystem.Services.AuthAPI.Controllers.AuthController",
    "Method": "GetUserById",
    "RelativePath": "api/Auth/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "EVStation_basedRentalSystem.Services.AuthAPI.Controllers.AuthController",
    "Method": "DeleteUser",
    "RelativePath": "api/Auth/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "EVStation_basedRentalSystem.Services.AuthAPI.Controllers.AuthController",
    "Method": "AssignRole",
    "RelativePath": "api/Auth/assign-role",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "EVStation_basedRentalSystem.Services.AuthAPI.Models.Dto.Request.AssignRoleRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "EVStation_basedRentalSystem.Services.AuthAPI.Controllers.AuthController",
    "Method": "ChangePassword",
    "RelativePath": "api/Auth/change-password",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "EVStation_basedRentalSystem.Services.AuthAPI.Models.Dto.Request.ChangePasswordRequestDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "EVStation_basedRentalSystem.Services.AuthAPI.Controllers.AuthController",
    "Method": "ForgotPassword",
    "RelativePath": "api/Auth/forgot-password",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "EVStation_basedRentalSystem.Services.AuthAPI.Models.Dto.Request.ForgotPasswordRequestDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "EVStation_basedRentalSystem.Services.AuthAPI.Controllers.AuthController",
    "Method": "Login",
    "RelativePath": "api/Auth/login",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "EVStation_basedRentalSystem.Services.AuthAPI.Models.Dto.Request.LoginRequestDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "EVStation_basedRentalSystem.Services.AuthAPI.Controllers.AuthController",
    "Method": "Logout",
    "RelativePath": "api/Auth/logout",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "EVStation_basedRentalSystem.Services.AuthAPI.Controllers.AuthController",
    "Method": "GetMe",
    "RelativePath": "api/Auth/me",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "EVStation_basedRentalSystem.Services.AuthAPI.Controllers.AuthController",
    "Method": "Refresh",
    "RelativePath": "api/Auth/refresh",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "EVStation_basedRentalSystem.Services.AuthAPI.Controllers.AuthController",
    "Method": "Register",
    "RelativePath": "api/Auth/register",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "EVStation_basedRentalSystem.Services.AuthAPI.Models.Dto.Request.RegistrationRequestDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "EVStation_basedRentalSystem.Services.AuthAPI.Controllers.AuthController",
    "Method": "ResetPassword",
    "RelativePath": "api/Auth/reset-password",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "EVStation_basedRentalSystem.Services.AuthAPI.Models.Dto.Request.ResetPasswordRequestDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "EVStation_basedRentalSystem.Services.AuthAPI.Controllers.AuthController",
    "Method": "RevokeRole",
    "RelativePath": "api/Auth/revoke-role",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "EVStation_basedRentalSystem.Services.AuthAPI.Models.Dto.Request.AssignRoleRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "EvRental.IncidentService.Controllers.IncidentsController",
    "Method": "Create",
    "RelativePath": "api/Incidents",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "EVStation_basedRentalSystem.Services.Incident.DTOs.Request.CreateIncidentDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "EvRental.IncidentService.Controllers.IncidentsController",
    "Method": "GetAll",
    "RelativePath": "api/Incidents",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "status",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "stationId",
        "Type": "System.Nullable\u00601[[System.Guid, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "EvRental.IncidentService.Controllers.IncidentsController",
    "Method": "GetById",
    "RelativePath": "api/Incidents/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "EvRental.IncidentService.Controllers.IncidentsController",
    "Method": "Assign",
    "RelativePath": "api/Incidents/{id}/assign",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      },
      {
        "Name": "adminId",
        "Type": "System.Guid",
        "IsRequired": false
      },
      {
        "Name": "dto",
        "Type": "EVStation_basedRentalSystem.Services.Incident.DTOs.Request.AssignIncidentDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "EvRental.IncidentService.Controllers.IncidentsController",
    "Method": "Decision",
    "RelativePath": "api/Incidents/{id}/decision",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      },
      {
        "Name": "adminId",
        "Type": "System.Guid",
        "IsRequired": false
      },
      {
        "Name": "dto",
        "Type": "EVStation_basedRentalSystem.Services.Incident.DTOs.Request.DecisionDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "EvRental.IncidentService.Controllers.IncidentsController",
    "Method": "Resolve",
    "RelativePath": "api/Incidents/{id}/resolve",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      },
      {
        "Name": "staffId",
        "Type": "System.Guid",
        "IsRequired": false
      },
      {
        "Name": "comment",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "EvRental.IncidentService.Controllers.IncidentsController",
    "Method": "Verify",
    "RelativePath": "api/Incidents/{id}/verify",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      },
      {
        "Name": "staffId",
        "Type": "System.Guid",
        "IsRequired": false
      },
      {
        "Name": "dto",
        "Type": "EVStation_basedRentalSystem.Services.Incident.DTOs.Request.VerifyIncidentDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "EvRental.IncidentService.Controllers.IncidentsController",
    "Method": "GetMy",
    "RelativePath": "api/Incidents/my",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "reporterId",
        "Type": "System.Guid",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "EvRental.IncidentService.Controllers.IncidentsController",
    "Method": "GetByStation",
    "RelativePath": "api/Incidents/station/{stationId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "stationId",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "EVStation_basedRentalSystem.Services.IncidentAPI.Controllers.WeatherForecastController",
    "Method": "Get",
    "RelativePath": "WeatherForecast",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[EVStation_basedRentalSystem.Services.IncidentAPI.WeatherForecast, EVStation-basedRentalSystem.Services.IncidentAPI, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ],
    "EndpointName": "GetWeatherForecast"
  }
]